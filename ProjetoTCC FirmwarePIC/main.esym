D G "__PCH__" 0 0 ""4.057""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""07-May-11""
D G "__TIME__" 0 0 ""22:45:50"" "CÓDIGO DE TESTE DA PLATAFORMA DE HARDWARE TCC ZIGBEE - LEANDRO HONORATO"
d G "PIN_A0" 1 28 "31744"
d G "PIN_A1" 1 29 "31745"
d G "PIN_A2" 1 30 "31746"
d G "PIN_A3" 1 31 "31747"
d G "PIN_A4" 1 32 "31748"
d G "PIN_A5" 1 33 "31749"
d G "PIN_A6" 1 34 "31750"
d G "PIN_B0" 1 36 "31752"
d G "PIN_B1" 1 37 "31753"
d G "PIN_B2" 1 38 "31754"
d G "PIN_B3" 1 39 "31755"
d G "PIN_B4" 1 40 "31756"
d G "PIN_B5" 1 41 "31757"
d G "PIN_B6" 1 42 "31758"
d G "PIN_B7" 1 43 "31759"
d G "PIN_C0" 1 45 "31760"
d G "PIN_C1" 1 46 "31761"
d G "PIN_C2" 1 47 "31762"
d G "PIN_C3" 1 48 "31763"
d G "PIN_C4" 1 49 "31764"
d G "PIN_C5" 1 50 "31765"
d G "PIN_C6" 1 51 "31766"
d G "PIN_C7" 1 52 "31767"
d G "PIN_D0" 1 54 "31768"
d G "PIN_D1" 1 55 "31769"
d G "PIN_D2" 1 56 "31770"
d G "PIN_D3" 1 57 "31771"
d G "PIN_D4" 1 58 "31772"
d G "PIN_D5" 1 59 "31773"
d G "PIN_D6" 1 60 "31774"
d G "PIN_D7" 1 61 "31775"
d G "PIN_E0" 1 63 "31776"
d G "PIN_E1" 1 64 "31777"
d G "PIN_E2" 1 65 "31778"
d G "PIN_E3" 1 66 "31779"
d G "FALSE" 1 69 "0"
d G "TRUE" 1 70 "1"
d G "BYTE" 1 72 "int8"
d G "BOOLEAN" 1 73 "int1"
d G "getc" 1 75 "getch"
d G "fgetc" 1 76 "getch"
d G "getchar" 1 77 "getch"
d G "putc" 1 78 "putchar"
d G "fputc" 1 79 "putchar"
d G "fgets" 1 80 "gets"
d G "fputs" 1 81 "puts"
d G "WDT_TIMEOUT" 1 87 "7"
d G "MCLR_FROM_SLEEP" 1 88 "11"
d G "MCLR_FROM_RUN" 1 89 "15"
d G "NORMAL_POWER_UP" 1 90 "12"
d G "BROWNOUT_RESTART" 1 91 "14"
d G "WDT_FROM_SLEEP" 1 92 "3"
d G "RESET_INSTRUCTION" 1 93 "0"
d G "RTCC_INTERNAL" 1 100 "0"
d G "RTCC_EXT_L_TO_H" 1 101 "32"
d G "RTCC_EXT_H_TO_L" 1 102 "48"
d G "RTCC_DIV_1" 1 104 "8"
d G "RTCC_DIV_2" 1 105 "0"
d G "RTCC_DIV_4" 1 106 "1"
d G "RTCC_DIV_8" 1 107 "2"
d G "RTCC_DIV_16" 1 108 "3"
d G "RTCC_DIV_32" 1 109 "4"
d G "RTCC_DIV_64" 1 110 "5"
d G "RTCC_DIV_128" 1 111 "6"
d G "RTCC_DIV_256" 1 112 "7"
d G "RTCC_OFF" 1 114 "0x80"
d G "RTCC_8_BIT" 1 116 "0x40"
d G "WDT_ON" 1 127 "0x100"
d G "WDT_OFF" 1 128 "0"
d G "T1_DISABLED" 1 134 "0"
d G "T1_INTERNAL" 1 135 "0x85"
d G "T1_EXTERNAL" 1 136 "0x87"
d G "T1_EXTERNAL_SYNC" 1 137 "0x83"
d G "T1_CLK_OUT" 1 139 "8"
d G "T1_DIV_BY_1" 1 141 "0"
d G "T1_DIV_BY_2" 1 142 "0x10"
d G "T1_DIV_BY_4" 1 143 "0x20"
d G "T1_DIV_BY_8" 1 144 "0x30"
d G "T2_DISABLED" 1 149 "0"
d G "T2_DIV_BY_1" 1 150 "4"
d G "T2_DIV_BY_4" 1 151 "5"
d G "T2_DIV_BY_16" 1 152 "6"
d G "T3_DISABLED" 1 158 "0"
d G "T3_INTERNAL" 1 159 "0x85"
d G "T3_EXTERNAL" 1 160 "0x87"
d G "T3_EXTERNAL_SYNC" 1 161 "0x83"
d G "T3_DIV_BY_1" 1 163 "0"
d G "T3_DIV_BY_2" 1 164 "0x10"
d G "T3_DIV_BY_4" 1 165 "0x20"
d G "T3_DIV_BY_8" 1 166 "0x30"
d G "CCP_OFF" 1 172 "0"
d G "CCP_CAPTURE_FE" 1 173 "4"
d G "CCP_CAPTURE_RE" 1 174 "5"
d G "CCP_CAPTURE_DIV_4" 1 175 "6"
d G "CCP_CAPTURE_DIV_16" 1 176 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 177 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 178 "9"
d G "CCP_COMPARE_INT" 1 179 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 180 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 181 "0xB"
d G "CCP_PWM" 1 182 "0xC"
d G "CCP_PWM_PLUS_1" 1 183 "0x1c"
d G "CCP_PWM_PLUS_2" 1 184 "0x2c"
d G "CCP_PWM_PLUS_3" 1 185 "0x3c"
d G "CCP_USE_TIMER3" 1 186 "0x100"
v G "CCP_1" 1 187 "int16"
d G "CCP_PWM_H_H" 1 192 "0x0c"
d G "CCP_PWM_H_L" 1 193 "0x0d"
d G "CCP_PWM_L_H" 1 194 "0x0e"
d G "CCP_PWM_L_L" 1 195 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 1 197 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 1 198 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 1 199 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 1 201 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 1 202 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 1 203 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 1 204 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 1 205 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 1 206 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 1 207 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 1 209 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 1 210 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 1 211 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 1 213 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 1 214 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 1 215 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 1 217 "0x80000000"
v G "CCP_2" 1 219 "int16"
d G "PSP_ENABLED" 1 228 "0x10"
d G "PSP_DISABLED" 1 229 "0"
d G "SPI_MASTER" 1 236 "0x20"
d G "SPI_SLAVE" 1 237 "0x24"
d G "SPI_L_TO_H" 1 238 "0"
d G "SPI_H_TO_L" 1 239 "0x10"
d G "SPI_CLK_DIV_4" 1 240 "0"
d G "SPI_CLK_DIV_16" 1 241 "1"
d G "SPI_CLK_DIV_64" 1 242 "2"
d G "SPI_CLK_T2" 1 243 "3"
d G "SPI_SS_DISABLED" 1 244 "1"
d G "SPI_SAMPLE_AT_END" 1 246 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 247 "0x4000"
d G "UART_ADDRESS" 1 253 "2"
d G "UART_DATA" 1 254 "4"
d G "UART_AUTODETECT" 1 255 "8"
d G "UART_AUTODETECT_NOWAIT" 1 256 "9"
d G "UART_WAKEUP_ON_RDA" 1 257 "10"
d G "UART_SEND_BREAK" 1 258 "13"
d G "A0_A3_A1_A3" 1 262 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 263 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 264 "0xbcf05"
d G "NC_NC_NC_NC" 1 265 "0x0ff07"
d G "A0_A3_A1_A2" 1 266 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 267 "0x9ef01"
d G "A0_VR_A1_VR" 1 268 "0x3ff06"
d G "A3_VR_A2_VR" 1 269 "0xcff0e"
d G "CP1_INVERT" 1 270 "0x0000010"
d G "CP2_INVERT" 1 271 "0x0000020"
d G "VREF_LOW" 1 279 "0xa0"
d G "VREF_HIGH" 1 280 "0x80"
d G "VREF_F5" 1 282 "0x40"
d G "VREF_COMP" 1 283 "0x10"
d G "LVD_LVDIN" 1 288 "0x1F"
d G "LVD_45" 1 289 "0x1E"
d G "LVD_42" 1 290 "0x1D"
d G "LVD_40" 1 291 "0x1C"
d G "LVD_38" 1 292 "0x1B"
d G "LVD_36" 1 293 "0x1A"
d G "LVD_35" 1 294 "0x19"
d G "LVD_33" 1 295 "0x18"
d G "LVD_30" 1 296 "0x17"
d G "LVD_28" 1 297 "0x16"
d G "LVD_27" 1 298 "0x15"
d G "LVD_25" 1 299 "0x14"
d G "LVD_24" 1 300 "0x13"
d G "LVD_23" 1 301 "0x12"
d G "LVD_22" 1 302 "0x11"
d G "LVD_21" 1 303 "0x10"
d G "LVD_TRIGGER_BELOW" 1 305 "0"
d G "LVD_TRIGGER_ABOVE" 1 306 "0x80"
d G "OSC_31KHZ" 1 312 "0"
d G "OSC_125KHZ" 1 313 "0x10"
d G "OSC_250KHZ" 1 314 "0x20"
d G "OSC_500KHZ" 1 315 "0x30"
d G "OSC_1MHZ" 1 316 "0x40"
d G "OSC_2MHZ" 1 317 "0x50"
d G "OSC_4MHZ" 1 318 "0x60"
d G "OSC_8MHZ" 1 319 "0x70"
d G "OSC_16MHZ" 1 320 "0x4060"
d G "OSC_32MHZ" 1 321 "0x4070"
d G "OSC_TIMER1" 1 323 "1"
d G "OSC_INTRC" 1 324 "2"
d G "OSC_NORMAL" 1 325 "0"
d G "OSC_IDLE_MODE" 1 327 "0x80"
d G "OSC_31250" 1 328 "0x8000"
d G "OSC_PLL_ON" 1 329 "0x4000"
d G "OSC_PLL_OFF" 1 330 "0"
d G "OSC_STATE_STABLE" 1 334 "4"
d G "OSC_STATE_EXT_RUNNING" 1 335 "8"
d G "ADC_OFF" 1 342 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 343 "0x100"
d G "ADC_CLOCK_DIV_4" 1 344 "0x04"
d G "ADC_CLOCK_DIV_8" 1 345 "0x01"
d G "ADC_CLOCK_DIV_16" 1 346 "0x05"
d G "ADC_CLOCK_DIV_32" 1 347 "0x02"
d G "ADC_CLOCK_DIV_64" 1 348 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 349 "0x07" "Internal 2-6us"
d G "NO_ANALOGS" 1 352 "0x0F" "None"
d G "ALL_ANALOG" 1 353 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 1 354 "0x03" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4"
d G "AN0_TO_AN10" 1 355 "0x04" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1"
d G "AN0_TO_AN9" 1 356 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3"
d G "AN0_TO_AN8" 1 357 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B2"
d G "AN0_TO_AN7" 1 358 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 1 359 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 1 360 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 1 361 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 362 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 363 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 364 "0x0D" "A0 A1"
d G "AN0" 1 365 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 1 366 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 1 367 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 1 368 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 1 369 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN7_ANALOG" 1 370 "0x07" "!old only provided for compatibility"
d G "AN0_TO_AN6_ANALOG" 1 371 "0x08" "!old only provided for compatibility"
d G "AN0_TO_AN5_ANALOG" 1 372 "0x09" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 1 373 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 1 374 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 1 375 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 1 376 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 1 377 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 380 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 381 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 382 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 383 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 387 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 388 "1"
d G "ADC_READ_ONLY" 1 389 "6"
d G "L_TO_H" 1 401 "0x40"
d G "H_TO_L" 1 402 "0"
d G "GLOBAL" 1 404 "0xF2C0"
d G "INT_RTCC" 1 405 "0xF220"
d G "INT_TIMER0" 1 406 "0xF220"
d G "INT_TIMER1" 1 407 "0x9D01"
d G "INT_TIMER2" 1 408 "0x9D02"
d G "INT_TIMER3" 1 409 "0xA002"
d G "INT_EXT" 1 410 "0xF210"
d G "INT_EXT1" 1 411 "0xF008"
d G "INT_EXT2" 1 412 "0xF010"
d G "INT_RB" 1 413 "0xFFF208"
d G "INT_AD" 1 414 "0x9D40"
d G "INT_RDA" 1 415 "0x9D20"
d G "INT_TBE" 1 416 "0x9D10"
d G "INT_SSP" 1 417 "0x9D08"
d G "INT_CCP1" 1 418 "0x9D04"
d G "INT_CCP2" 1 419 "0xA001"
d G "INT_BUSCOL" 1 420 "0xA008"
d G "INT_LOWVOLT" 1 421 "0xA004"
d G "INT_COMP" 1 422 "0xA040"
d G "INT_EEPROM" 1 423 "0xA010"
d G "INT_OSCF" 1 424 "0xA080"
d G "INT_SPP" 1 425 "0x9D80"
d G "INT_USB" 1 426 "0xA020"
D G "enable" 2 41 "PIN_B3"
D G "rs" 2 42 "PIN_B5"
D G "rw" 2 43 "PIN_B4"
C L "lcd_putc" 2 2 1 "FUNCTION"
V L "c" 2 46 "int8"
F G "lcd_putc" 2 46 "void(int8 c)"
V L "numero" 2 47 "int8"
F G "inverte_bits" 2 47 "int8(int8 numero)"
V L "x" 2 48 "int8"
V L "y" 2 48 "int8"
F G "lcd_gotoxy" 2 48 "void(int8 x,int8 y)" "struct lcd_pin_map {                 // This structure is overlayed"
D G "lcd_line_two" 2 120 "0x40" "LCD RAM address for the second line"
V L "n" 2 122 "int8"
F G "lcd_send_nibble" 2 122 "void(int8 n)" "lcd.data = n;"
C L "lcd_send_nibble" 2 2 1 "FUNCTION"
C L "lcd_send_nibble" 2 2 1 "FUNCTION"
C L "lcd_send_nibble" 2 2 1 "FUNCTION"
V L "address" 2 139 "int8"
V L "n" 2 139 "int8"
F G "lcd_send_byte" 2 139 "void(int8 address,int8 n)" "lcd.rs = 0;"
C L "lcd_send_byte" 2 2 1 "FUNCTION"
C L "lcd_send_byte" 2 2 1 "FUNCTION"
C L "lcd_send_byte" 2 2 1 "FUNCTION"
F G "lcd_init" 2 160 "void()"
C L "lcd_init" 2 2 2 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 2 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 2 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 2 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 2 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 2 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
C L "lcd_init" 2 2 1 "FUNCTION"
V L "x" 2 275 "int8"
V L "y" 2 275 "int8"
F G "lcd_gotoxy" 2 275 "void(int8 x,int8 y)"
V L "address" 2 276 "int8"
V L "c" 2 286 "int8"
F G "lcd_putc" 2 286 "void(int8 c)"
C L "inverte_bits" 2 2 8 "FUNCTION"
V L "numero" 2 311 "int8"
F G "inverte_bits" 2 311 "int8(int8 numero)"
V L "byte_invertido" 2 312 "int8"
V L "count" 2 313 "int8"
V L "temp" 2 314 "int8"
C L "inverte_bits" 2 2 1 "FUNCTION"
F G "clearLine1" 2 328 "void()"
F G "clearLine2" 2 334 "void()"
F G "clearLCD" 2 340 "void()"
D G "_STDLIB" 4 12 ""
D G "RAND_MAX" 4 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 4 24 "1"
T G "div_t" 4 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 4 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 5 13 ""
D G "ptrdiff_t" 5 18 "unsigned int16"
D G "size_t" 5 21 "unsigned int8"
D G "wchar_t" 5 22 "char"
D G "NULL" 5 23 "0"
D G "offsetof" 5 25 "(s,f) (offsetofbit(s,f)/8)"
C L "atof" 4 43 2 "FUNCTION"
C L "atof" 4 46 1 "*"
C L "atof" 4 46 1 "*"
V L "s" 4 50 "*int8"
F G "atof" 4 50 "float(*int8 s)" "Standard template: float32 atoe(char * s)"
C L "atof" 4 69 1 "*"
C L "atof" 4 69 1 "*"
C L "atof" 4 69 1 "*"
V L "s" 4 74 "*int8"
F G "atoe" 4 74 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 4 76 1 "*"
C L "atoe" 4 76 1 "*"
V L "s" 4 80 "*int8"
F G "atoi" 4 80 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 4 88 "*int8"
F G "atoi32" 4 88 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 4 76 2 "FUNCTION"
V L "num" 4 109 "sint32"
V L "base" 4 109 "int8"
V L "s" 4 109 "*int8"
F G "itoa" 4 109 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 4 111 1 "*"
C L "itoa" 4 111 1 "*"
V L "s" 4 115 "*int8"
F G "atol" 4 115 "sint16(*int8 s)" "Standard template: float32 strtod(char * s,char *endptr)"
C L "atol" 4 117 1 "*"
C L "atol" 4 117 1 "*"
C L "atol" 4 117 1 "*"
V L "s" 4 123 "*int8"
V L "endptr" 4 123 "*int8"
F G "strtod" 4 123 "float(*int8 s,*int8 endptr)" "Standart template: float32 strto(char * s,char *endptr)"
C L "strtod" 4 117 2 "FUNCTION"
C L "strtod" 4 126 1 "*"
C L "strtod" 4 126 1 "*"
C L "strtod" 4 126 2 "*"
C L "strtod" 4 139 1 "*"
C L "strtod" 4 139 1 "*"
C L "strtod" 4 139 1 "*"
C L "strtod" 4 139 1 "*"
V L "s" 4 145 "*int8"
V L "endptr" 4 145 "*int8"
V L "base" 4 145 "sint8"
F G "strtol" 4 145 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 4 147 1 "*"
C L "strtol" 4 147 1 "*"
C L "strtol" 4 147 1 "*"
C L "strtol" 4 147 1 "*"
V L "s" 4 153 "*int8"
V L "endptr" 4 153 "*int8"
V L "base" 4 153 "sint8"
F G "strtoul" 4 153 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 4 147 1 "FUNCTION"
C L "strtoul" 4 159 1 "*"
C L "strtoul" 4 159 1 "*"
C L "strtoul" 4 159 1 "*"
C L "strtoul" 4 159 1 "*"
C L "strtoul" 4 159 1 "*"
F G "rand" 4 168 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
C L "rand" 4 170 1 "*"
V L "seed" 4 190 "int32"
F G "srand" 4 190 "void(int32 seed)" "Memory management functions"
C L "srand" 4 170 3 "FUNCTION"
V L "string" 4 204 "*int8"
F G "system" 4 204 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 4 170 1 "FUNCTION"
C L "system" 4 210 1 "*"
C L "system" 4 210 1 "*"
C L "system" 4 210 1 "*"
C L "system" 4 210 1 "*"
C L "system" 4 210 1 "*"
C L "system" 4 210 1 "*"
C L "system" 4 210 1 "*"
C L "system" 4 210 1 "*"
C L "system" 4 210 1 "*"
C L "system" 4 210 1 "*"
C L "system" 4 210 4 "*"
C L "system" 4 228 1 "*"
C L "system" 4 228 1 "*"
C L "system" 4 228 1 "*"
C L "system" 4 228 1 "*"
C L "system" 4 228 1 "*"
C L "system" 4 228 1 "*"
C L "system" 4 228 1 "*"
C L "system" 4 228 1 "*"
D G "labs" 4 248 "abs"
V L "numer" 4 250 "sint8"
V L "denom" 4 250 "sint8"
F G "div" 4 250 "div_t(sint8 numer,sint8 denom)"
V L "numer" 4 251 "sint16"
V L "denom" 4 251 "sint16"
F G "ldiv" 4 251 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 4 228 4 "FUNCTION"
C L "ldiv" 5 2 7 "FUNCTION"
D G "_STRING" 6 12 ""
C L "ldiv" 5 2 7 "FUNCTION"
D G "_CTYPE" 7 12 ""
D G "islower" 7 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 7 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 7 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 7 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 7 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 7 19 "(x)  ((x)==' ')"
D G "isxdigit" 7 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 7 21 "(x)  ((x)<' ')"
D G "isprint" 7 22 "(x)  ((x)>=' ')"
D G "isgraph" 7 23 "(x)  ((x)>' ')"
D G "ispunct" 7 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 6 19 10 "FUNCTION"
V L "s1" 6 34 "*int8"
V L "s2" 6 34 "*int8"
V L "n" 6 34 "int8"
F G "memmove" 6 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 6 36 "*int8"
V L "sc2" 6 37 "*int8"
C L "strcopy" 6 19 3 "FUNCTION"
V L "s1" 6 53 "*int8"
V L "s2" 6 53 "*int8"
F G "strcopy" 6 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 6 55 "*int8"
C L "strncpy" 6 19 4 "FUNCTION"
V L "s1" 6 69 "*int8"
V L "s2" 6 69 "*int8"
V L "n" 6 69 "int8"
F G "strncpy" 6 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 6 71 "*int8"
C L "strcat" 6 19 3 "FUNCTION"
V L "s1" 6 86 "*int8"
V L "s2" 6 86 "*int8"
F G "strcat" 6 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 6 88 "*int8"
C L "strncat" 6 19 2 "FUNCTION"
V L "s1" 6 104 "*int8"
V L "s2" 6 104 "*int8"
V L "n" 6 104 "int8"
F G "strncat" 6 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 6 106 "*int8"
C L "memcmp" 6 19 3 "FUNCTION"
V L "s1" 6 128 "*int8"
V L "s2" 6 128 "*int8"
V L "n" 6 128 "int8"
F G "memcmp" 6 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 6 130 "*int8"
V L "su2" 6 130 "*int8"
C L "strcmp" 6 19 2 "FUNCTION"
V L "s1" 6 142 "*int8"
V L "s2" 6 142 "*int8"
F G "strcmp" 6 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 6 19 2 "FUNCTION"
V L "s1" 6 152 "*int8"
V L "s2" 6 152 "*int8"
F G "strcoll" 6 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 6 19 4 "FUNCTION"
V L "s1" 6 165 "*int8"
V L "s2" 6 165 "*int8"
V L "n" 6 165 "int8"
F G "strncmp" 6 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 6 19 3 "FUNCTION"
V L "s1" 6 177 "*int8"
V L "s2" 6 177 "*int8"
V L "n" 6 177 "int8"
F G "strxfrm" 6 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 6 179 "*int8"
V L "n1" 6 180 "int8"
C L "memchr" 6 19 3 "FUNCTION"
V L "s" 6 199 "*int8"
V L "c" 6 199 "int8"
V L "n" 6 199 "int8"
F G "memchr" 6 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 6 201 "int8"
V L "su" 6 202 "*int8"
C L "strchr" 6 19 2 "FUNCTION"
V L "s" 6 213 "*int8"
V L "c" 6 213 "int8"
F G "strchr" 6 214 "*int8(*int8 s,int8 c)"
V L "s1" 6 225 "*int8"
V L "s2" 6 225 "*int8"
F G "strcspn" 6 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 6 227 "*int8"
V L "sc2" 6 227 "*int8"
C L "strpbrk" 6 19 4 "FUNCTION"
V L "s1" 6 240 "*int8"
V L "s2" 6 240 "*int8"
F G "strpbrk" 6 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 6 242 "*int8"
V L "sc2" 6 242 "*int8"
C L "strrchr" 6 19 2 "FUNCTION"
V L "s" 6 255 "*int8"
V L "c" 6 255 "int8"
F G "strrchr" 6 256 "*int8(*int8 s,int8 c)"
V L "p" 6 257 "*int8"
V L "s1" 6 270 "*int8"
V L "s2" 6 270 "*int8"
F G "strspn" 6 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 6 272 "*int8"
V L "sc2" 6 272 "*int8"
C L "strstr" 6 19 6 "FUNCTION"
V L "s1" 6 289 "*int8"
V L "s2" 6 289 "*int8"
F G "strstr" 6 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 6 291 "*int8"
V L "t" 6 291 "*int8"
C L "strtok" 6 19 13 "FUNCTION"
V L "s1" 6 328 "*int8"
V L "s2" 6 328 "*int8"
F G "strtok" 6 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 6 330 "*int8"
V L "end" 6 330 "*int8"
V L "save" 6 331 "*int8"
V L "s" 6 377 "*int8"
F G "strlen" 6 378 "*int8(*int8 s)"
V L "sc" 6 379 "*int8"
C L "stricmp" 6 19 2 "FUNCTION"
V L "s1" 6 388 "*int8"
V L "s2" 6 388 "*int8"
F G "stricmp" 6 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 6 19 3 "FUNCTION"
V L "s" 6 402 "*int8"
F G "strlwr" 6 403 "*int8(*int8 s)"
V L "p" 6 404 "*int8"
V L "numer" 4 273 "sint8"
V L "denom" 4 273 "sint8"
F G "div" 4 274 "div_t(sint8 numer,sint8 denom)"
V L "val" 4 275 "div_t"
V L "numer" 4 281 "sint16"
V L "denom" 4 281 "sint16"
F G "ldiv" 4 282 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 4 283 "ldiv_t"
V L "s" 4 289 "*int8"
F G "atof" 4 290 "float(*int8 s)"
V L "pow10" 4 291 "float"
V L "result" 4 292 "float"
V L "sign" 4 293 "int8"
V L "c" 4 294 "int8"
V L "ptr" 4 295 "int8"
V L "s" 4 410 "*int8"
F G "atoe" 4 411 "float(*int8 s)"
V L "pow10" 4 412 "float"
V L "result" 4 413 "float"
V L "sign" 4 414 "int8"
V L "expsign" 4 415 "int8"
V L "c" 4 416 "int8"
V L "ptr" 4 417 "int8"
V L "i" 4 418 "int8"
V L "exp" 4 419 "float"
V L "expcnt" 4 420 "int8"
C L "atoe" 4 446 1 "FUNCTION"
V L "s" 4 477 "*int8"
F G "atoi" 4 478 "sint8(*int8 s)"
V L "result" 4 479 "sint8"
V L "sign" 4 480 "int8"
V L "base" 4 480 "int8"
V L "index" 4 480 "int8"
V L "c" 4 481 "int8"
C L "atoi" 4 446 1 "FUNCTION"
C L "atoi" 4 446 1 "FUNCTION"
C L "atoi" 4 446 1 "FUNCTION"
C L "atoi" 4 446 1 "FUNCTION"
C L "atoi" 4 446 1 "FUNCTION"
C L "atoi" 4 446 1 "FUNCTION"
V L "s" 4 546 "*int8"
F G "atol" 4 547 "sint16(*int8 s)"
V L "result" 4 548 "sint16"
V L "sign" 4 549 "int8"
V L "base" 4 549 "int8"
V L "index" 4 549 "int8"
V L "c" 4 550 "int8"
C L "atol" 4 446 1 "FUNCTION"
C L "atol" 4 446 1 "FUNCTION"
C L "atol" 4 446 1 "FUNCTION"
C L "atol" 4 446 1 "FUNCTION"
C L "mult_with10" 4 446 1 "FUNCTION"
V L "num" 4 613 "int32"
F G "mult_with10" 4 614 "sint32(int32 num)"
V L "s" 4 619 "*int8"
F G "atoi32" 4 620 "sint32(*int8 s)"
V L "result" 4 621 "sint32"
V L "sign" 4 622 "int8"
V L "base" 4 622 "int8"
V L "index" 4 622 "int8"
V L "c" 4 623 "int8"
C L "atoi32" 4 446 1 "FUNCTION"
C L "atoi32" 4 446 1 "FUNCTION"
C L "atoi32" 4 446 1 "FUNCTION"
C L "atoi32" 4 446 1 "FUNCTION"
C L "atoi32" 4 446 1 "FUNCTION"
V L "num" 4 818 "sint32"
V L "base" 4 818 "int8"
V L "s" 4 818 "*int8"
F G "itoa" 4 819 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 4 820 "int32"
V L "i" 4 821 "int8"
V L "sign" 4 821 "int8"
V L "cnt" 4 821 "int8"
V L "c" 4 822 "int8"
C L "itoa" 4 446 1 "FUNCTION"
C L "itoa" 4 446 1 "FUNCTION"
C L "itoa" 4 446 1 "FUNCTION"
C L "itoa" 4 446 1 "FUNCTION"
C L "itoa" 4 446 1 "FUNCTION"
V L "s" 4 856 "*int8"
V L "endptr" 4 856 "*int8"
F G "strtod" 4 856 "float(*int8 s,*int8 endptr)"
V L "pow10" 4 857 "float"
V L "result" 4 858 "float"
V L "sign" 4 859 "int8"
V L "point" 4 859 "int8"
V L "c" 4 860 "int8"
V L "ptr" 4 861 "int8"
V L "s" 4 1118 "*int8"
V L "endptr" 4 1118 "*int8"
V L "base" 4 1118 "sint8"
F G "strtoul" 4 1119 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 4 1120 "*int8"
V L "s1" 4 1120 "*int8"
V L "sd" 4 1120 "*int8"
V L "x" 4 1121 "int16"
V L "sign" 4 1122 "int8"
V L "digits" 4 1123 "int8[1]"
C L "strtoul" 4 446 1 "FUNCTION"
C L "strtoul" 4 446 1 "FUNCTION"
C L "strtoul" 4 446 1 "FUNCTION"
V L "s" 4 1180 "*int8"
V L "endptr" 4 1180 "*int8"
V L "base" 4 1180 "sint8"
F G "strtol" 4 1181 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 4 1182 "*int8"
V L "s1" 4 1182 "*int8"
V L "sd" 4 1182 "*int8"
V L "x" 4 1183 "sint16"
V L "sign" 4 1184 "int8"
V L "digits" 4 1185 "int8[1]"
C L "strtol" 4 446 1 "FUNCTION"
C L "strtol" 4 446 1 "FUNCTION"
C L "strtol" 4 446 1 "FUNCTION"
V L "string" 4 1243 "*int8"
F G "system" 4 1244 "sint8(*int8 string)"
V L "s" 4 1248 "*int8"
V L "n" 4 1248 "int8"
F G "mblen" 4 1249 "int8(*int8 s,int8 n)"
V L "pwc" 4 1253 "*int8"
V L "s" 4 1253 "*int8"
V L "n" 4 1253 "int8"
F G "mbtowc" 4 1254 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 4 1259 "*int8"
V L "wchar" 4 1259 "int8"
F G "wctomb" 4 1260 "int8(*int8 s,int8 wchar)"
V L "pwcs" 4 1265 "*int8"
V L "s" 4 1265 "*int8"
V L "n" 4 1265 "int8"
F G "mbstowcs" 4 1266 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 4 1271 "*int8"
V L "pwcs" 4 1271 "*int8"
V L "n" 4 1271 "int8"
F G "wcstombs" 4 1272 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 4 1281 "int32"
F G "rand" 4 1284 "int16()"
V L "seed" 4 1289 "int32"
F G "srand" 4 1290 "void(int32 seed)"
V L "p1" 4 1298 "*int8"
V L "p2" 4 1298 "*int8"
T G "*_Cmpfun" 4 1298 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 4 1300 "*int8"
V L "qitems" 4 1300 "int8"
V L "qsize" 4 1300 "int8"
V L "cmp" 4 1300 "_Cmpfun"
F G "qsort" 4 1300 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 4 1301 "int8"
V L "j" 4 1301 "int8"
V L "i" 4 1301 "int8"
V L "l" 4 1301 "int8"
V L "done" 4 1302 "int1"
V L "t" 4 1303 "int8[16]"
V L "key" 4 1328 "*int8"
V L "base" 4 1328 "*int8"
V L "num" 4 1328 "int8"
V L "width" 4 1328 "int8"
V L "cmp" 4 1328 "_Cmpfun"
F G "bsearch" 4 1329 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 4 1330 "*int8"
V L "q" 4 1330 "*int8"
V L "n" 4 1331 "int8"
V L "pivot" 4 1332 "int8"
V L "val" 4 1333 "sint8"
C L "bsearch" 4 446 1 "FUNCTION"
V L "canal" 3 4 "int8"
V L "p_valor" 3 4 "*int32"
F G "ler_canal_AD_para_int32" 3 5 "void(int8 canal,*int32 p_valor)"
C L "ler_canal_AD_para_int32" 3 6 1 "FUNCTION"
C L "ler_canal_AD_para_int32" 3 6 1 "FUNCTION"
C L "ler_canal_AD_para_int32" 3 6 1 "FUNCTION"
V L "canal" 3 11 "int8"
V L "p_valorChar" 3 11 "*int8"
F G "ler_canal_AD_para_puint8" 3 12 "void(int8 canal,*int8 p_valorChar)"
V L "valorLeitura" 3 14 "int32"
C L "ler_canal_AD_para_puint8" 3 6 1 "FUNCTION"
C L "ler_canal_AD_para_puint8" 3 6 1 "FUNCTION"
C L "ler_canal_AD_para_puint8" 3 6 1 "FUNCTION"
F G "init_ADC" 3 22 "void()"
C L "init_ADC" 3 6 1 "FUNCTION"
C L "init_ADC" 3 6 1 "FUNCTION"
C G "" 8 1 1 "*"
D G "MAX_BUFFER" 8 7 "50" "Tamanho do Buffer de recepção Serial"
D G "MAX_PACOTE" 8 8 "30" "Tamanho do Array onde as respostas são armazenadas"
V G "buffer_resposta_zigbee" 8 12 "int8[50]" "Buffer que recebe os dados e comandos pela serial"
V G "pacoteRecebido" 8 13 "int8[30]" "array para armazenar os comandos recebidos na medida que forem retirados do buffer (ver funções buscar_dados e buscar_respostas)"
V G "contador_escrita" 8 16 "int8" "Variável para saber onde escrever no Buffer de recepção Serial (resposta_zigbee)"
V G "contador_leitura" 8 17 "int8" "Variável para saber onde ler no Buffer de recepção Serial (resposta_zigbee)"
V G "comandoREADR" 8 18 "int8[7]"
V G "comandoSET_NAME" 8 19 "int8[7]"
V G "comandoREMOTO" 8 20 "int8[7]"
T G "TipoPacote" 8 28 "_TipoPacote"
T G "Pacote" 8 34 "{TipoPacote TipoPacote,int8[15] informacao}" "* Esta função deve ser chamada sempre que chegar dados pela serial"
C L "interrupcao_serial" 8 36 1 "*"
C L "interrupcao_serial" 8 36 1 "FUNCTION"
F G "interrupcao_serial" 8 41 "void()"
V L "temp" 8 42 "int8"
C L "interrupcao_serial" 8 36 1 "FUNCTION"
F G "zerarBufferPacoteRecebido" 8 52 "void()"
V L "contador" 8 53 "int8"
F G "chegouPacote" 8 61 "int8()"
V L "i" 8 62 "int8"
V L "temp_pacote" 8 63 "int8[30]"
V L "contadorPacote" 8 64 "int8"
C L "chegouPacote" 8 36 1 "FUNCTION"
C L "inicializar_variaveis" 8 89 1 "*"
F G "inicializar_variaveis" 8 93 "void()" "TESTADO"
C L "limpar_buffer" 8 102 1 "*"
F G "limpar_buffer" 8 106 "void()" "TESTADO"
V L "contador" 8 107 "int8"
C L "zigbee_restoreDefault" 8 116 1 "*"
C L "zigbee_restoreDefault" 8 116 1 "*"
C L "zigbee_restoreDefault" 8 116 1 "FUNCTION"
F G "zigbee_restoreDefault" 8 122 "void()"
C L "zigbee_restoreDefault" 8 116 1 "FUNCTION"
C L "zigbee_restoreDefault" 8 116 1 "FUNCTION"
C L "zigbee_softwareReset" 8 127 1 "*"
C L "zigbee_softwareReset" 8 127 1 "*"
C L "zigbee_softwareReset" 8 127 1 "FUNCTION"
F G "zigbee_softwareReset" 8 133 "void()"
C L "zigbee_NetworkReset" 8 138 1 "*"
C L "zigbee_NetworkReset" 8 138 1 "*"
C L "zigbee_NetworkReset" 8 138 1 "*"
C L "zigbee_NetworkReset" 8 138 1 "*"
C L "zigbee_NetworkReset" 8 138 1 "*"
V L "parametro" 8 145 "*int8" "TESTADO"
F G "zigbee_NetworkReset" 8 146 "void(*int8 parametro)"
C L "zigbee_Write" 8 151 1 "*"
C L "zigbee_Write" 8 151 1 "*"
C L "zigbee_Write" 8 151 1 "*"
C L "zigbee_Write" 8 151 1 "FUNCTION"
F G "zigbee_Write" 8 158 "void()"
C L "zigbee_getDestinationAddressHigh" 8 163 1 "*"
C L "zigbee_getDestinationAddressHigh" 8 163 1 "*"
C L "zigbee_getDestinationAddressHigh" 8 163 1 "FUNCTION"
F G "zigbee_getDestinationAddressHigh" 8 169 "void()"
C L "zigbee_setDestinationAddressHigh" 8 174 1 "*"
C L "zigbee_setDestinationAddressHigh" 8 174 1 "*"
V L "enderecoAlto" 8 179 "*int8" "TESTADO"
F G "zigbee_setDestinationAddressHigh" 8 180 "void(*int8 enderecoAlto)"
C L "zigbee_getDestinationAddressLow" 8 185 1 "*"
C L "zigbee_getDestinationAddressLow" 8 185 1 "*"
C L "zigbee_getDestinationAddressLow" 8 185 1 "FUNCTION"
F G "zigbee_getDestinationAddressLow" 8 191 "void()"
C L "zigbee_setDestinationAddressLow" 8 196 1 "*"
C L "zigbee_setDestinationAddressLow" 8 196 1 "*"
V L "enderecoBaixo" 8 201 "*int8" "TESTADO"
F G "zigbee_setDestinationAddressLow" 8 202 "void(*int8 enderecoBaixo)"
C L "zigbee_MY" 8 207 1 "*"
C L "zigbee_MY" 8 207 1 "*"
F G "zigbee_MY" 8 212 "void()"
C L "zigbee_MP" 8 217 1 "*"
C L "zigbee_MP" 8 217 1 "*"
F G "zigbee_MP" 8 222 "void()"
C L "zigbee_SerialNumberHigh" 8 227 1 "*"
F G "zigbee_SerialNumberHigh" 8 231 "void()"
C L "zigbee_SerialNumberLow" 8 236 1 "*"
F G "zigbee_SerialNumberLow" 8 240 "void()"
C L "zigbee_EnableEncryption" 8 245 1 "*"
F G "zigbee_EnableEncryption" 8 249 "void()"
C L "zigbee_setKY" 8 254 1 "*"
V L "key" 8 258 "*int8"
F G "zigbee_setKY" 8 258 "void(*int8 key)"
C L "zigbee_NodeIdentifier" 8 263 1 "*"
C L "zigbee_NodeIdentifier" 8 263 1 "*"
V L "nome" 8 268 "*int8"
F G "zigbee_NodeIdentifier" 8 268 "void(*int8 nome)" "TESTADO"
C L "zigbee_NodeIdentifier" 8 263 1 "FUNCTION"
C L "zigbee_operatingChanel" 8 273 1 "*"
F G "zigbee_operatingChanel" 8 277 "void()" "TESTADO"
C L "zigbee_operatingChanel" 8 273 1 "FUNCTION"
C L "zigbee_setPANID" 8 282 1 "*"
C L "zigbee_setPANID" 8 282 1 "*"
C L "zigbee_setPANID" 8 282 1 "*"
V L "pan" 8 288 "*int8"
F G "zigbee_setPANID" 8 288 "void(*int8 pan)" "TESTADO"
C L "zigbee_setPANID" 8 282 1 "FUNCTION"
C L "zigbee_getPANID" 8 293 1 "*"
C L "zigbee_getPANID" 8 293 1 "*"
C L "zigbee_getPANID" 8 293 1 "*"
F G "zigbee_getPANID" 8 299 "void()" "TESTADO"
C L "zigbee_getPANID" 8 293 1 "FUNCTION"
C L "zigbee_setNT" 8 304 1 "*"
C L "zigbee_setNT" 8 304 1 "*"
C L "zigbee_setNT" 8 304 1 "*"
V L "time" 8 309 "*int8"
F G "zigbee_setNT" 8 309 "void(*int8 time)" "TESTADO"
C L "zigbee_setNT" 8 304 1 "FUNCTION"
C L "zigbee_getNT" 8 314 1 "*"
C L "zigbee_getNT" 8 314 1 "*"
F G "zigbee_getNT" 8 318 "void()" "TESTADO"
C L "zigbee_getNT" 8 314 1 "FUNCTION"
C L "zigbee_destinationNode" 8 323 1 "*"
C L "zigbee_destinationNode" 8 323 1 "*"
C L "zigbee_destinationNode" 8 323 1 "*"
V L "nomeDestino" 8 328 "*int8"
F G "zigbee_destinationNode" 8 328 "void(*int8 nomeDestino)" "TESTADO"
C L "zigbee_destinationNode" 8 323 1 "FUNCTION"
C L "enviar_string" 8 333 1 "*"
C L "enviar_string" 8 333 1 "*"
C L "enviar_string" 8 333 1 "*"
V L "string" 8 338 "*int8"
F G "enviar_string" 8 338 "void(*int8 string)" "TESTADO"
C L "enviar_inteiro" 8 344 1 "*"
C L "enviar_inteiro" 8 344 1 "*"
V L "numero" 8 348 "int8"
F G "enviar_inteiro" 8 348 "void(int8 numero)" "TESTADO"
C L "enviar_char" 8 354 1 "*"
C L "enviar_char" 8 354 1 "*"
V L "caractere" 8 358 "int8"
F G "enviar_char" 8 358 "void(int8 caractere)" "TESTADO"
C L "enviar_pacote_Leitura" 8 364 1 "*"
C L "enviar_pacote_Leitura" 8 364 1 "*"
C L "enviar_pacote_Leitura" 8 364 1 "*"
C L "enviar_pacote_Leitura" 8 364 1 "*EX"
C L "enviar_pacote_Leitura" 8 364 7 "*"
V L "enderecoH" 8 381 "*int8"
V L "enderecoL" 8 381 "*int8"
V L "canalLido" 8 381 "int8"
V L "valorLido" 8 381 "*int8"
F G "enviar_pacote_Leitura" 8 381 "void(*int8 enderecoH,*int8 enderecoL,int8 canalLido,*int8 valorLido)" "TESTADO"
C L "enviar_pacote_Leitura" 8 364 1 "FUNCTION"
F G "irParaModoComando" 8 387 "void()"
F G "irParaModoTransparente" 8 394 "void()"
C L "irParaModoTransparente" 8 364 1 "FUNCTION"
F G "esperaPacote" 8 400 "void()"
V L "i" 8 401 "int8"
V L "pacoteRecebidoStruct" 8 411 "*Pacote"
F G "tratarPacote" 8 412 "void(*Pacote pacoteRecebidoStruct)"
V L "pacoteRecebidoAux" 8 413 "int8[10]"
V L "i" 8 414 "int8"
V L "indexInformacao" 8 415 "int8"
D G "TAXA_ATUALIZACAO_DESTINO" 0 19 "100"
V G "enderecoH" 0 24 "int8[10]"
V G "enderecoL" 0 25 "int8[10]"
V G "stringOK" 0 26 "int8[3]"
V G "stringDestinationNodeName" 0 27 "int8[5]"
V G "keyPassword" 0 28 "int8[10]"
V G "quantidadePacotesEnviados" 0 29 "int8"
V G "pacoteStruct" 0 30 "Pacote"
V G "valorLeituraAD" 0 31 "int32"
V G "valorStringLeituraAD" 0 32 "int8[10]" "FIM DAS VARIÁVEIS GLOBAIS//"
C L "reception" 0 22 1 "FUNCTION"
F G "reception" 0 42 "void()"
C L "reception" 0 22 1 "FUNCTION"
C L "modoComando" 0 22 2 "FUNCTION"
F G "modoComando" 0 53 "void()"
F G "modoTransparente" 0 74 "void()"
C L "modoTransparente" 0 22 1 "FUNCTION"
F G "setarDesstinoConcentrador" 0 95 "void()"
F G "enviarLeitura" 0 120 "void()"
V L "canal" 0 121 "int8"
F G "setarNomeDevice" 0 145 "void()"
C L "setarNomeDevice" 0 22 1 "FUNCTION"
F G "enviarComandoRemoto" 0 187 "void()"
V L "respostaComando" 0 188 "int8[15]"
C L "enviarComandoRemoto" 0 22 1 "FUNCTION"
F G "imprimirLeiturasLCD" 0 199 "void()"
C L "MAIN" 0 22 2 "FUNCTION"
F G "MAIN" 0 212 "void()" "while(1) ;}"
C L "MAIN" 0 22 1 "FUNCTION"
C L "MAIN" 0 22 1 "FUNCTION"
C L "MAIN" 0 22 1 "FUNCTION"
C L "MAIN" 0 22 1 "FUNCTION"
C L "MAIN" 0 22 1 "FUNCTION"
C L "MAIN" 0 22 1 "FUNCTION"
C L "MAIN" 0 22 1 "FUNCTION"
C L "MAIN" 0 22 1 "FUNCTION"
C L "MAIN" 0 22 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_vref" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
